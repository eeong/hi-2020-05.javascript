var Slide = function(arg){
	this.slide = arg.slide;
	this.title = arg.slideTitle || null;
	if(this.title) this.title.push(this.title[0]);
	this.$slides = [];
	this.container = arg.container;
	this.$container = $(this.container);
	this.direction = arg.direction || 'horizental';
	this.delay = arg.delay || '3000';
	this.speed = arg.speed || '500';
	this.auto = arg.auto || 'false';
	this.pager= arg.pager || 'false';
	this.btnUse= arg.btnUse || 'true';

	this.init();

	return this;
}

Slide.prototype.init = function(){

	this.$container.css({"overflow": "hidden" , "position":"relative"})
	this.$wrapper = $('<div class="custom-wrapper custom-'+ this.direction +  ' " ></div>').appendTo(this.$container);


	for (var i in this.slide){
		var html ='';
		html += '<div class="custom-slide">';
		html += '<img src='+this.slide[i]+' class="custom-img slide">';
		if(this.title && this.title[i]) html += this.title[i];
		html += '</div>';
		if(this.direction === "horizental" || this.direction === "vertical") this.$slides.push( $(html).appendTo(this.$wrapper));
		if(this.direction === "fade") this.$slides.push($(html));
	}
	if(this.direction == "horizental" || this.direction == "vertical"){
		this.$slides.push($(this.$slides[0].clone()).appendTo(this.$wrapper));
	}

	this.last = this.$slides.length - 1;
	this.now = 0;

	if(this.btnUse){
		this.$btnPrev = $("<div class='btn-custom custom-prev'> 〈 </div>").appendTo(this.$container);
		this.$btnNext = $("<div class='btn-custom custom-next'> 〉 </div>").appendTo(this.$container);
		this.$btnPrev.click(this.onClickPrev.bind(this)); 
		this.$btnNext.click(this.onClickNext.bind(this));
	}
	
	if(this.pager){
		this.$pagerWrap = $('<div class="custom-pager-wrap"></div>').appendTo(this.$container);
		for(var i in this.slide){
		$("<div class='custom-pager'></div>").appendTo(this.$pagerWrap).click(this.onPagerClick.bind(this));
	}
	this.$pagerWrap.find(".custom-pager").eq(0).addClass("active");
	}

	if(this.auto){
		this.$container.mouseover(this.onMouseOver.bind(this)).mouseleave(this.onMouseLeave.bind(this));
		this.interval = setInterval(this.onInterval.bind(this) , this.delay);
	}

	var html = '<img src='+ this.slide[0] + ' style="width:100%; opacity:0">';
	this.$container.append(html);

}

Slide.prototype.onPagerClick = function(e){
	this.now = $(e.currentTarget).index();
	this.ani();
}

Slide.prototype.onMouseOver = function(){
	clearInterval(this.interval);

}

Slide.prototype.onMouseLeave = function(){
	this.interval =setInterval(this.onInterval.bind(this) , this.delay);
}

Slide.prototype.onClickPrev = function(e){
	if(this.now == 0) {
		if(this.direction ==="horizental" || this.direction === "vertical"){
			this.now = this.last - 1;
			this.$wrapper.css(this.direction === 'horizental' ? 'left' : 'top', -100 * this.last+ "%"); 
		}
		if(this.direction === "fade")	this.now = this.last;
	}
	else this.now--;
	
	this.ani();
};

Slide.prototype.onClickNext = function(e){
	if(this.now == this.last){
		if(this.direction ==="horizental" || this.direction === "vertical"){	this.now = 1;
		this.$wrapper.css(this.direction === 'horizental' ? 'left' : 'top',0);}
		if(this.direction === "fade") this.now = 0;
	}else this.now++;
	this.ani();
}


Slide.prototype.onInterval = function(){
if(this.auto === "true") this.onClickNext();
}

Slide.prototype.ani = function(){

	if(this.pager){
		this.$pagerWrap.find(".custom-pager").eq(this.now).addClass("active").siblings().removeClass("active");
		$(".custom-pager").eq(this.now).addClass("active");
		if(this.now == this.last) this.$pagerWrap.find(".custom-pager").eq(0).addClass("active").siblings().removeClass("active");
	}

	if(this.direction == "horizental"){
		this.$wrapper.stop().animate({"left": -100*this.now+ "%"} , this.speed);
	}
	else if(this.direction == "vertical"){
		this.$wrapper.stop().animate({"top": -100*this.now+ "%"} , this.speed);
	}
	else {
		$(this.$slides[this.now].clone()).appendTo(this.$wrapper).css("opacity",0).stop().animate({opacity: 1 } , this.speed , function(){
			$(this).prev().remove();
		});
	}


}

Slide.prototype.startInit = function(){


}